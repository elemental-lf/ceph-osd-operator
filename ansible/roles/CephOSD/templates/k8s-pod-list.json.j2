{% set uptodate = {} %}
{% set ready = {} %}
{% set unready = {} %}
{% set outofdate = {} %}
{% set invalid = [] %}

{#

Pods are classified into several groups:

* Up-to-date: The pod looks fine and its configuration is up-to-date.
* Out-of-date The pod looks fine but its configuration is out-of-date and it will be upgraded by recreating it.
* Ready: The pod is up-to-date and it's waiting to get ready and its actual state is ready.
* Unready: The pod is up-to-date and it's waiting to get ready but it's not ready (yet).
* Invalid: The pod is missing some mandatory annotations, is a duplicate or has an invalid name. It will be deleted.

The group the pod belongs to is determined by this logic:

* If the pod is terminating:
    * The pod is ignored altogether.
* Else if the mandatory pod annotations are present:
    * If the pod is a duplicate of another pod:
        * The pod is invalid.
    * Else if the pod name doesn't conform to our scheme:
        * The pod is invalid.
    * Else if the pod's template hash equals the current template hash from the CR:
        * If the pod is waiting to get ready and its actual state is ready:
            * The pod is ready.
        * Else if the pod is waiting to get ready and it's not ready:
            * The pod is unready.
        * Else:
            * The pod is up-to-date.
    * Else:
        * The pod is out-of-date.
* Else:
    * The pod is invalid.
#}

{% for item in k8s_gvks %}
{%   if 'deletionTimestamp' in item.metadata %}
{%     continue %}
{%   elif [ceph_osd_cr_api_group + '/host',
           ceph_osd_cr_api_group + '/pod-template-hash',
           ceph_osd_cr_api_group + '/data'] is subset(item.metadata.annotations.keys()) %}
{%     set host = item.metadata.annotations[ceph_osd_cr_api_group + '/host'] %}
{%     set pod_template_hash =  item.metadata.annotations[ceph_osd_cr_api_group + '/pod-template-hash'] %}
{%     set osd = {} %}
{%     do osd.update({'data': item.metadata.annotations[ceph_osd_cr_api_group + '/data']}) %}
{%     do osd.update({'db': item.metadata.annotations[ceph_osd_cr_api_group + '/db']})
                    if (ceph_osd_cr_api_group + '/db') in item.metadata.annotations %}
{%     do osd.update({'wal': item.metadata.annotations[ceph_osd_cr_api_group + '/wal']})
                    if (ceph_osd_cr_api_group + '/wal') in item.metadata.annotations %}

{%     set pod_name_prefix = ('osd-{}-{}-'.format(host | regex_replace('^([^\.]+)(?:\..+)?$', '\\1'), osd.data | regex_replace('^.+/([^/]+)$', '\\1') | regex_replace('[^\\w]','-')))[:58] %}
{%     set pod_key = '{}:{}'.format(host, osd.data) %}
{%     if pod_key in uptodate or pod_key in ready or pod_key in unready or pod_key in outofdate %}
{%       do invalid.append(item.metadata.name) %}
{%     elif not item.metadata.name.startswith(pod_name_prefix) %}
{%       do invalid.append(item.metadata.name) %}
{%     elif pod_template_hash == ceph_osd_pod_template_hash %}
{%       set ns = {} %}
{%       do ns.update({'target_dict': uptodate}) %}
{%       if (ceph_osd_cr_api_group + '/upgrade-state') in item.metadata.annotations and item.metadata.annotations[ceph_osd_cr_api_group + '/upgrade-state'] == 'wait-for-ready' %}
{%         do ns.update({'pod_ready': False}) %}
{%         for condition in item.status.conditions %}
{%           if condition.type == 'Ready' and condition.status == 'True' %}
{%             do ns.update({'pod_ready': True}) %}
{%           endif %}
{%         endfor %}
{%         if ns.pod_ready  %}
{%           do ns.update({'target_dict': ready}) %}
{%         else %}
{%           do ns.update({'target_dict': unready}) %}
{%         endif %}
{%       endif %}
{%       do ns.target_dict.update({pod_key: {'host': host,
                                             'pod': item,
                                             'pod_name_prefix': pod_name_prefix,
                                             'osd': osd}}) %}
{%     else %}
{%       do outofdate.update({pod_key: {'host': host,
                                        'pod': item,
                                        'pod_name_prefix': pod_name_prefix,
                                        'osd': osd}}) %}
{%     endif %}
{%   else %}
{%     do invalid.append(item.metadata.name) %}
{%   endif %}
{% endfor %}

{{ { 'uptodate': uptodate, 'ready': ready, 'unready': unready, 'outofdate': outofdate, 'invalid': invalid } | to_json }}
