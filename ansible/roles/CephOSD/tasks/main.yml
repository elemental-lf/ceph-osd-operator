---
- debug:
    var: _ceph_elemental_net_cephosd

- name: extract custom resource data
  set_fact:
    ceph_osd_cr_namespace: '{{ meta.namespace }}'
    ceph_osd_cr_name: '{{ meta.name }}'
    ceph_osd_cr_api_version: '{{ _ceph_elemental_net_cephosd.apiVersion }}'
    ceph_osd_cr_kind: '{{ _ceph_elemental_net_cephosd.kind }}'
    ceph_osd_cr_uid: '{{ _ceph_elemental_net_cephosd.metadata.uid }}'
    ceph_osd_cr_api_group: "{{ _ceph_elemental_net_cephosd.apiVersion.split('/')[0] }}"
    ceph_osd_storage: "{{ _ceph_elemental_net_cephosd.spec.storage }}"
    ceph_osd_pod_template: "{{ _ceph_elemental_net_cephosd.spec.podTemplate }}"
    ceph_osd_pod_template_hash: "{{ lookup('dicthash', _ceph_elemental_net_cephosd.spec.podTemplate)[:16] }}"

- block:
  - name: lookup running pods
    set_fact:
      k8s_gvks: "{{ query('k8s', api_version='v1', kind='Pod', namespace=ceph_osd_cr_namespace,
                          label_selector=ceph_osd_cr_api_group + '/owner=' + ceph_osd_cr_kind + '-' + ceph_osd_cr_name) }}"
  rescue:
  - name: no running pods found
    set_fact:
      k8s_gvks: []

- name: build list of pods from configuration
  set_fact:
    ceph_osd_pods_configured: "{{ lookup('template', 'configured-pod-list.json.j2') | from_json }}"

- name: build list of pods from running pods
  set_fact:
    ceph_osd_pods: "{{ lookup('template', 'k8s-pod-list.json.j2') | from_json }}"

- name: calculate missing pods
  set_fact:
    ceph_osd_pods_missing: "{{ ceph_osd_pods_configured.keys() | difference(ceph_osd_pods.uptodate.keys() | union(ceph_osd_pods.outofdate.keys()) | union(ceph_osd_pods.ready.keys()) | union(ceph_osd_pods.unready.keys())) | list }}"

- name: calculate superfluous pods
  set_fact:
    ceph_osd_pods_superfluous: "{{ ceph_osd_pods.uptodate.keys() | union(ceph_osd_pods.outofdate.keys()) | difference(ceph_osd_pods_configured.keys()) | list }}"

- name: Missing pods
  debug:
    var: item
  loop: "{{ ceph_osd_pods_missing }}"

- name: Invalid pods
  debug:
    var: item
  loop: "{{ ceph_osd_pods.invalid }}"

- name: Up-to-date pods
  debug:
    var: item
  loop: "{{ ceph_osd_pods.uptodate.keys() }}"

- name: Out-of-date pods
  debug:
    var: item
  loop: "{{ ceph_osd_pods.outofdate.keys() }}"

- name: Ready pods
  debug:
    var: item
  loop: "{{ ceph_osd_pods.ready.keys() }}"

- name: Unready pods
  debug:
    var: item
  loop: "{{ ceph_osd_pods.unready.keys() }}"

- name: delete invalid pods
  k8s:
    state: absent
    api_version: v1
    kind: Pod
    namespace: "{{ ceph_osd_cr_namespace }}"
    name: "{{ item }}"
  loop: "{{ ceph_osd_pods.invalid }}"

- name: delete superfluous pods
  k8s:
    state: absent
    api_version: v1
    kind: Pod
    namespace: "{{ ceph_osd_cr_namespace }}"
    name: "{{ item }}"
  when: item in ceph_osd_pods_superfluous
  loop: "{{ ceph_osd_pods.uptodate.keys() }}"

- name: create missing pods
  k8s:
    state: present
    definition: "{{ ceph_osd_pod_template | combine(lookup('template', 'pod-overrides.yaml.j2') | from_yaml, recursive=True) }}"
    force: True
  vars:
    ceph_osd_pod_name: "{{ item.value.pod_name_prefix + lookup('password', '/dev/null length=5 chars=ascii_lowercase,digits') }}"
    ceph_osd_host: "{{ item.value.host }}"
    ceph_osd_data: "{{ item.value.osd.data }}"
    ceph_osd_db: "{{ item.value.osd.db | default(None) }}"
    ceph_osd_wal: "{{ item.value.osd.wal | default(None) }}"
  when: item.key in ceph_osd_pods_missing
  loop: "{{ query('dict', ceph_osd_pods_configured) }}"

- name: set upgrade-state of out-of-date pods to out-of-date
  k8s:
    state: present
    api_version: v1
    kind: Pod
    namespace: "{{ ceph_osd_cr_namespace }}"
    name: "{{ item.value.pod.metadata.name }}"
    definition: "{{ {'metadata': {'annotations': {ceph_osd_cr_api_group + '/upgrade-state': 'out-of-date'}}} }}"
  when: >
    (ceph_osd_cr_api_group + '/upgrade-state') not in item.value.pod.metadata.annotations or
      item.value.pod.metadata.annotations[ceph_osd_cr_api_group + '/upgrade-state'] != 'out-of-date'
  loop: "{{ query('dict', ceph_osd_pods.outofdate) }}"

- name: set upgrade-state of ready pods to up-to-date
  k8s:
    state: present
    api_version: v1
    kind: Pod
    namespace: "{{ ceph_osd_cr_namespace }}"
    name: "{{ item.value.pod.metadata.name }}"
    definition: "{{ {'metadata': {'annotations': {ceph_osd_cr_api_group + '/upgrade-state': 'up-to-date'}}} }}"
  when: >
    (ceph_osd_cr_api_group + '/upgrade-state') not in item.value.pod.metadata.annotations or
      item.value.pod.metadata.annotations[ceph_osd_cr_api_group + '/upgrade-state'] != 'up-to-date'
  loop: "{{ query('dict', ceph_osd_pods.ready) }}"

- name: set upgrade-state of up-to-date pods to up-to-date
  k8s:
    state: present
    api_version: v1
    kind: Pod
    namespace: "{{ ceph_osd_cr_namespace }}"
    name: "{{ item.value.pod.metadata.name }}"
    definition: "{{ {'metadata': {'annotations': {ceph_osd_cr_api_group + '/upgrade-state': 'up-to-date'}}} }}"
  when: >
    (ceph_osd_cr_api_group + '/upgrade-state') not in item.value.pod.metadata.annotations or
      item.value.pod.metadata.annotations[ceph_osd_cr_api_group + '/upgrade-state'] != 'up-to-date'
  loop: "{{ query('dict', ceph_osd_pods.uptodate) }}"

- name: upgrade one out-of-date pod by recreating it
  block:
  - set_fact:
      # Sorting ensures that we'll advance host by host
      ceph_osd_upgrade_candidate: "{{ ceph_osd_pods.outofdate[(ceph_osd_pods.outofdate.keys() | sort)[0]] }}"

  - name: delete out-of-date pod
    k8s:
      state: absent
      api_version: v1
      kind: Pod
      namespace: "{{ ceph_osd_cr_namespace }}"
      name: "{{ ceph_osd_upgrade_candidate.pod.metadata.name }}"

  - name: create new up-to-date pod
    k8s:
      state: present
      definition: "{{ ceph_osd_pod_template | combine(lookup('template', 'pod-overrides.yaml.j2') | from_yaml, {'metadata': {'annotations': {ceph_osd_cr_api_group + '/upgrade-state': 'wait-for-ready'}}}, recursive=True) }}"
      force: True
    vars:
      ceph_osd_pod_name: "{{ ceph_osd_upgrade_candidate.pod_name_prefix + lookup('password', '/dev/null length=5 chars=ascii_lowercase,digits') }}"
      ceph_osd_host: "{{ ceph_osd_upgrade_candidate.host }}"
      ceph_osd_data: "{{ ceph_osd_upgrade_candidate.osd.data }}"
      ceph_osd_db: "{{ ceph_osd_upgrade_candidate.osd.db | default(None) }}"
      ceph_osd_wal: "{{ ceph_osd_upgrade_candidate.osd.wal | default(None) }}"
  when: ceph_osd_pods.outofdate | length > 0 and ceph_osd_pods.unready | length == 0
